---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app kometa
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system

  install:
    remediation:
      retries: 3

  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: plex
      namespace: media
    - name: volsync
      namespace: volsync-system
  values:
    controllers:
      main:
        type: &type cronjob
        cronjob: &cronjob
          schedule: "4 4 * * *"
          timeZone: &timeZone ${TIMEZONE}
          concurrencyPolicy: Forbid
          successfulJobsHistory: 1
          failedJobsHistory: 1
        containers:
          app: &container_app
            image:
              repository: kometateam/kometa
              tag: develop@sha256:cbeec2bf8007dd7183bc86d1b179d313e83eed5da69ecfd04b571716ef4c20c5
            command:
              - /bin/sh
              - -c
            args:
              - |
                python3 kometa.py --run --read-only-config
            env:
              TZ: *timeZone
              KOMETA_CONFIG: /config/config.yaml
            envFrom:
              - secretRef:
                  name: kometa-secret
            resources:
              requests:
                cpu: 10m
                memory: 10M
              limits:
                memory: 10G
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            # lifecycle:
            #   postStart:
            #     exec:
            #       command: ["/bin/bash", "-c", "mkdir -p /config/assets/{anime,awards,decades,genres,holidays,networks,suggestions,posters}"]

      # anime:
      #   type: *type
      #   cronjob:
      #     <<: *cronjob
      #     schedule: "0 9 * * *"
      #   containers:
      #     app:
      #       <<: *container_app
      #       args:
      #         - |
      #           python3 kometa.py --run --read-only-config --overlays-only --run-libraries "Animeserier|Animefilmer"

      # kids:
      #   type: *type
      #   cronjob:
      #     <<: *cronjob
      #     schedule: "0 1 * * *"
      #   containers:
      #     app:
      #       <<: *container_app
      #       args:
      #         - |
      #           python3 kometa.py --run --read-only-config --overlays-only --run-libraries "Barnfilmer|Barnserier"

      # standard-series:
      #   type: *type
      #   cronjob:
      #     <<: *cronjob
      #     schedule: "10 13 * * *"
      #   containers:
      #     app:
      #       <<: *container_app
      #       args:
      #         - |
      #           python3 kometa.py --run --read-only-config --overlays-only --run-libraries "Serier"

      standard-movies:
        type: *type
        cronjob:
          <<: *cronjob
          schedule: "25 11,16 * * *"
        containers:
          app:
            <<: *container_app
            args:
              - |
                python3 kometa.py --run --read-only-config --collections-only --run-libraries "Filmer"

      sport:
        type: *type
        cronjob:
          <<: *cronjob
          schedule: "0 8,10,12,14,16,18 * * *"
        containers:
          app:
            <<: *container_app
            args:
              - |
                python3 kometa.py --run --read-only-config --run-libraries "Sport"

      motorsport:
        type: *type
        cronjob:
          <<: *cronjob
          schedule: "15 8,12,15,18,21 * * *"
        containers:
          app:
            <<: *container_app
            args:
              - |
                python3 kometa.py --run --read-only-config --run-libraries "Motorsport"

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: Always

    persistence:
      assets:
        type: persistentVolumeClaim
        accessMode: ReadWriteOnce
        size: 75Gi
        storageClass: openebs-zfs
        globalMounts:
          - path: /config/assets

      config:
        existingClaim: *app

      config-file:
        type: configMap
        name: kometa-configmap
        globalMounts:
          - path: /config/config.yaml
            subPath: config.yaml
            readOnly: true

      logs:
        type: emptyDir
        globalMounts:
          - path: /config/logs

      custom-configs:
        type: configMap
        name: kometa-custom-configs
        globalMounts:
          - path: /config/best-of.yaml
            subPath: best-of.yaml
            readOnly: true
          - path: /config/movies_collections.yaml
            subPath: movies_collections.yaml
            readOnly: true
          - path: /config/series_collections.yaml
            subPath: series_collections.yaml
            readOnly: true
          - path: /config/title_cards.yaml
            subPath: title_cards.yaml
            readOnly: true
