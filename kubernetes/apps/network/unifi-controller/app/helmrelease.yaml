---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app unifi-controller
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: volsync
      namespace: storage
  values:
    controllers:
      unifi-controller:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/goofball222/unifi
              tag: 8.4
            env:
              TZ: ${TIMEZONE}
              RUNAS_UID0: false
              PUID: 568
              PGID: 568
              LOGSTDOUT: true
              JVM_MAX_HEAP_SIZE: 1024M
            resources:
              requests:
                cpu: 10m
                memory: 250Mi
              limits:
                memory: 1024Mi
        pod:
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        controller: unifi-controller
        primary: true
        annotations:
          external-dns.alpha.kubernetes.io/hostname: "internal.${SECRET_DOMAIN}"
          io.cilium/lb-ipam-ips: "${NGINX_INTERNAL_IP}"
        ports:
          http:
            port: 8443
      unifi:
        controller: unifi-controller
        type: LoadBalancer
        annotations:
          external-dns.alpha.kubernetes.io/hostname: "unifi.internal.${SECRET_DOMAIN_INTERNAL}"
          io.cilium/lb-ipam-ips: "${UNIFI_LB_ADDR}"
        externalTrafficPolicy: Cluster
        ports:
          controller:
            port: 8080
            protocol: TCP
          stun:
            port: 3478
            protocol: UDP
    ingress:
      app:
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          nginx.ingress.kubernetes.io/auth-method: GET
          nginx.ingress.kubernetes.io/auth-url: "https://auth.${SECRET_DOMAIN}/api/verify"
          nginx.ingress.kubernetes.io/auth-signin: "https://auth.${SECRET_DOMAIN}/?rm=$request_method"
          nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
          nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Method $request_method;
          nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
          nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
          nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
        hosts:
          - host: "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        existingClaim: unifi-controller
        globalMounts:
          - path: /usr/lib/unifi/data
      logs:
        type: emptyDir
        globalMounts:
          - path: /usr/lib/unifi/logs
